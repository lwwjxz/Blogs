### 第一章:分布式架构   
1. 分布式的特点:分布性，对等性，并发性，缺乏全局时钟，故障总会发生。   
1. 分布式环境的各种问题(都是由于网络问题导致的):
    1. 通信异常:网络本身的不可靠，延时(现代计算机体系中，单机内存访问的延时通常是10ns，而正常的一次
    网络通信的延迟在0.1~1ms左右，相当于内存访问的10000和10000倍)   
    1. 网络分区: 
    1. 三态:成功，失败和超时。而在单机系统中能够得到一个非常明确的响应(成功或失败)。当出现超时时通常有以下
    两种情况，所以当出现超时，网络通信的发起方是无法确定当前请求是否被成功处理的。  
        1. 请求没有被成功地发送到接收方，而是在发送过程中发生了消息丢失。
        1. 该请求成功的被接收，并进行了处理(成功或失败)，但是响应反馈給发送方的过程中，发生了消息丢失。   
    1. 节点故障。   
1. 系统的可用性和严格一致性之间是冲突的。   
    1. CAP:一个分布式系统不可能同时满足一致性、可用性和分区容错性这三个基本需求，最多只能同时满足其中的两项。   
    1. 对于分布式系统而言，网络问题又是一个必定会出现的异常情况，因此分区容错性也就成为了一个分布式系统必然需要
    面对和解决的问题。因此系统架构师往往需要把尽力花在如何根据业务特点在一致性和可用性直接需求平衡。    
1. BASE是对CAP中一致性和可用性权衡的结果，其来源于对大规模互联网分布式实践的总结。是基于CAP定理逐渐演化而来的。其
核心思想是即使无法做到强一致性，但每个应用都可以根据自身业务的特点，采用适当的方式来使系统达到最终一致性。
    1. BASE三要素：基本可用，软状态和最终一致性。   
    1. 最终一致性强调的是系统中所有的数据副本，在经过一段时间的同步后，最终都能达到一个一致的状态。
    最终一致性的几个变种:因果一致性，读己之所写，会话一致性，单调读一致性，单调写一致性。   
    1. 3PC提交协议最大的优点就是降低了参与者的阻塞范围，并能够在出现单点故障后继续达到一致:
        1. 降低阻塞范围是因为第一阶段不需要锁定资源。  
        1. 在单点故障后继续达成一致性是因为在第三阶段参与者在收不到协调者的信号后继续提交显然牺牲了一致性。   
1. 在分布式计算领域，试图在异步系统和不可靠的通道上来达成一致性状态是不可能的，因此在对一致性研究过程中，都往往
假设信道是可靠的。另一方面由于硬件和网络的原因造成的消息不完整问题只需要一套简单的校验算法(验签)即可避免。因此，在
实际工程实践中，可以假设不存在拜占庭将军问题，即建设所有的消息都是完整的，没有被篡改的。那么，在这种情况下需要什么样的
算法来保证一致性呢？
1. Paxos算法就是为了保证在分布式系统中基于消息传递就某个值达成一致。   
1. 会话: 只要在sessionTimeout规定的时间内能够重新连接上集群中任意任意一台服务器，那么之前创建的会话仍然有效。  
1. 一旦客户端会话失效，那么这个客户端创建的所有临时节点都会被移除，所以snowFlake算法中机器的会话失效后将不会在占用机器位数。   
1. 每个事务中都有一个版本号。
1. ZAB是特为zk设计的一种原子消息广播算法。
